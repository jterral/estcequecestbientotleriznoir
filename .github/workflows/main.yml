name: main

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  build:
    name: ðŸ”¨ build-app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 14
      - run: npm clean-install
      - run: npm run lint
      - run: npm test -- --coverage
      - run: npm run build
      - uses: actions/upload-artifact@v3
        with:
          name: artifact-site
          path: ./dist

  versioning:
    name: ðŸ§® get-version
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 1
    outputs:
      tag: ${{ steps.compute.outputs.tag }}
      version: ${{ steps.compute.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - name: Compute version
        id: compute
        run: |
          calver=$(date +'%y.%U')
          minor=$(git tag -l $calver.* | wc -l)
          tag=$calver.$minor
          version=$tag+$GITHUB_RUN_NUMBER
          echo $version
          echo "::set-output name=tag::$tag"
          echo "::set-output name=version::$version"

  terraform:
    name: ðŸ—º terraform
    runs-on: ubuntu-latest
    needs: versioning
    timeout-minutes: 2
    defaults:
      run:
        working-directory: 'terraform'
    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false

  deploy:
    name: ðŸš€ deploy
    runs-on: ubuntu-latest
    needs: terraform
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v3
